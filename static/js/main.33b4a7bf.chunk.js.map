{"version":3,"sources":["Author/Author.js","Components/Button.js","Components/Calculator.js","index.js","App.js"],"names":["Author","className","href","target","rel","title","Button","content","handleButton","onClick","Calculator","useState","value","setValue","memory","setMemory","operator","setOperator","num","parseFloat","toString","length","includes","val","decimal","isNeg","substring","indexOf","toLocaleString","comma","ReactDOM","render","document","getElementById"],"mappings":"yJAEe,SAASA,IACtB,OACE,6BACE,yBAAKC,UAAU,UAAS,uBAAGC,KAAK,iCAAiCC,OAAO,SAASC,IAAI,sBAAsBC,MAAM,mCAAzF,oB,WCHf,SAASC,EAAT,GAA6C,IAA1BC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,aACzC,OACE,yBAAKP,UAAS,iBAAwB,MAAZM,EAAkB,OAAS,IAAME,QAASD,EAAaD,IAC9EA,GCFQ,SAASG,IAAe,IAAD,EACVC,mBAAS,KADC,mBAC7BC,EAD6B,KACtBC,EADsB,OAERF,mBAAS,MAFD,mBAE7BG,EAF6B,KAErBC,EAFqB,OAGJJ,mBAAS,MAHL,mBAG7BK,EAH6B,KAGnBC,EAHmB,KAK9BT,EAAe,SAAAD,GAAO,OAAI,WAC9B,IAAMW,EAAMC,WAAWP,GACvB,GAAgB,OAAZL,EAIF,OAHAM,EAAS,KACTE,EAAU,WACVE,EAAY,MAId,GAAgB,SAAZV,EAAJ,CAKA,GAAgB,MAAZA,EAIF,OAHAM,GAAUK,EAAM,KAAKE,YACrBL,EAAU,WACVE,EAAY,MAGd,GAAgB,MAAZV,EAAJ,CAMA,GAAgB,SAAZA,EAgBF,OAfiB,OAAbS,EACe,MAAbA,EACFD,EAAUD,EAASK,WAAWP,IACR,MAAbI,EACTD,EAAUD,EAASK,WAAWP,IACR,MAAbI,EACTD,EAAUD,EAASK,WAAWP,IACR,SAAbI,GACTD,EAAUD,EAASK,WAAWP,IAGhCG,EAAUI,WAAWP,IAEvBC,EAAS,UACTI,EAAY,QAGd,GAAgB,MAAZV,EAgBF,OAfiB,OAAbS,EACe,MAAbA,EACFD,EAAUD,EAASK,WAAWP,IACR,MAAbI,EACTD,EAAUD,EAASK,WAAWP,IACR,MAAbI,EACTD,EAAUD,EAASK,WAAWP,IACR,SAAbI,GACTD,EAAUD,EAASK,WAAWP,IAGhCG,EAAUI,WAAWP,IAEvBC,EAAS,UACTI,EAAY,KAGd,GAAgB,MAAZV,EAgBF,OAfiB,OAAbS,EACe,MAAbA,EACFD,EAAUD,EAASK,WAAWP,IACR,MAAbI,EACTD,EAAUD,EAASK,WAAWP,IACR,MAAbI,EACTD,EAAUD,EAASK,WAAWP,IACR,SAAbI,GACTD,EAAUD,EAASK,WAAWP,IAGhCG,EAAUI,WAAWP,IAEvBC,EAAS,UACTI,EAAY,KAGd,GAAgB,MAAZV,EAgBF,OAfiB,OAAbS,EACe,MAAbA,EACFD,EAAUD,EAASK,WAAWP,IACR,MAAbI,EACTD,EAAUD,EAASK,WAAWP,IACR,MAAbI,EACTD,EAAUD,EAASK,WAAWP,IACR,SAAbI,GACTD,EAAUD,EAASK,WAAWP,IAGhCG,EAAUI,WAAWP,IAEvBC,EAAS,UACTI,EAAY,KAId,GAAgB,MAAZV,EAAiB,CACnB,IAAKS,EAAU,OAef,OAZEH,EADe,MAAbG,GACQF,EAASK,WAAWP,IAAQQ,WAChB,MAAbJ,GACCF,EAASK,WAAWP,IAAQQ,WAChB,MAAbJ,GACCF,EAASK,WAAWP,IAAQQ,WAChB,SAAbJ,GACCF,EAASK,WAAWP,IAAQQ,WAE7BD,WAAWP,IAEtBG,EAAU,WACVE,EAAY,MAGkB,MAA5BL,EAAMA,EAAMS,OAAS,GACvBR,EAASD,EAAQL,GAEjBM,EAASM,WAAWD,EAAMX,GAASa,gBApGrC,CACE,GAAIR,EAAMU,SAAS,KAAM,OACzBT,EAASD,EAAQ,WAZjBC,IAAiB,EAAPK,GAAUE,cAkIxB,OACE,yBAAKnB,UAAU,cACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,WACb,uBAAGA,UAAU,kBAAkBa,IAEjC,yBAAKb,UAAU,UACb,uBAAGA,UAAU,eAvBP,SAACW,GACb,IAAIW,EAAM,GACNC,EAAU,GACVC,GAAQ,EAWZ,OAVIb,EAAMU,SAAS,MACjBC,EAAMX,EAAMc,UAAU,EAAGd,EAAMe,QAAQ,MACvCH,EAAUZ,EAAMc,UAAUd,EAAMe,QAAQ,OAExCJ,EAAMX,EAEJO,WAAWP,GAAS,IACtBa,GAAQ,EACRF,EAAMA,EAAIG,UAAU,IAEfD,EAAQ,IAAMN,WAAWI,GAAKK,iBAAmBJ,EAAUL,WAAWI,GAAKK,iBAAmBJ,EASnEK,CAAMjB,MAGtC,yBAAKX,UAAU,WACb,kBAACK,EAAD,CAAQE,aAAcA,EAAcD,QAAQ,OAC5C,kBAACD,EAAD,CAAQE,aAAcA,EAAcD,QAAQ,SAC5C,kBAACD,EAAD,CAAQE,aAAcA,EAAcD,QAAQ,MAC5C,kBAACD,EAAD,CAAQE,aAAcA,EAAcD,QAAQ,SAC5C,kBAACD,EAAD,CAAQE,aAAcA,EAAcD,QAAQ,MAC5C,kBAACD,EAAD,CAAQE,aAAcA,EAAcD,QAAQ,MAC5C,kBAACD,EAAD,CAAQE,aAAcA,EAAcD,QAAQ,MAC5C,kBAACD,EAAD,CAAQE,aAAcA,EAAcD,QAAQ,MAC5C,kBAACD,EAAD,CAAQE,aAAcA,EAAcD,QAAQ,MAC5C,kBAACD,EAAD,CAAQE,aAAcA,EAAcD,QAAQ,MAC5C,kBAACD,EAAD,CAAQE,aAAcA,EAAcD,QAAQ,MAC5C,kBAACD,EAAD,CAAQE,aAAcA,EAAcD,QAAQ,MAC5C,kBAACD,EAAD,CAAQE,aAAcA,EAAcD,QAAQ,MAC5C,kBAACD,EAAD,CAAQE,aAAcA,EAAcD,QAAQ,MAC5C,kBAACD,EAAD,CAAQE,aAAcA,EAAcD,QAAQ,MAC5C,kBAACD,EAAD,CAAQE,aAAcA,EAAcD,QAAQ,MAC5C,kBAACD,EAAD,CAAQE,aAAcA,EAAcD,QAAQ,MAC5C,kBAACD,EAAD,CAAQE,aAAcA,EAAcD,QAAQ,MAC5C,kBAACD,EAAD,CAAQE,aAAcA,EAAcD,QAAQ,QC5KpDuB,IAASC,OAAO,mBCDD,WACb,OACE,6BACE,kBAACrB,EAAD,MACA,kBAACV,EAAD,SDHU,MAASgC,SAASC,eAAe,U","file":"static/js/main.33b4a7bf.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Author () {\r\n  return (\r\n    <div>\r\n      <div className=\"author\"><a href=\"https://github.com/majessietic\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"Link to author's Github Profile\">Jessie Tarrosa</a></div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Button ({ content, handleButton }) {\r\n  return (\r\n    <div className={`Button ${content === '0' ? 'zero' : ''}`} onClick={handleButton(content)}>\r\n      {content}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport Button from './Button'\r\n\r\nexport default function Calculator () {\r\n  const [value, setValue] = useState('0')\r\n  const [memory, setMemory] = useState(null)\r\n  const [operator, setOperator] = useState(null)\r\n\r\n  const handleButton = content => () => {\r\n    const num = parseFloat(value)\r\n    if (content === 'AC') {\r\n      setValue('0')\r\n      setMemory(null)\r\n      setOperator(null)\r\n      return\r\n    }\r\n\r\n    if (content === '±') {\r\n      setValue((num * -1).toString())\r\n      return\r\n    }\r\n\r\n    if (content === '%') {\r\n      setValue((num / 100).toString())\r\n      setMemory(null)\r\n      setOperator(null)\r\n      return\r\n    }\r\n    if (content === '.') {\r\n      if (value.includes('.')) return\r\n      setValue(value + '.')\r\n      return\r\n    }\r\n\r\n    if (content === '÷') {\r\n      if (operator !== null) {\r\n        if (operator === '+') {\r\n          setMemory(memory + parseFloat(value))\r\n        } else if (operator === '-') {\r\n          setMemory(memory - parseFloat(value))\r\n        } else if (operator === 'x') {\r\n          setMemory(memory * parseFloat(value))\r\n        } else if (operator === '÷') {\r\n          setMemory(memory / parseFloat(value))\r\n        }\r\n      } else {\r\n        setMemory(parseFloat(value))\r\n      }\r\n      setValue('0')\r\n      setOperator('÷')\r\n      return\r\n    }\r\n    if (content === 'x') {\r\n      if (operator !== null) {\r\n        if (operator === '+') {\r\n          setMemory(memory + parseFloat(value))\r\n        } else if (operator === '-') {\r\n          setMemory(memory - parseFloat(value))\r\n        } else if (operator === 'x') {\r\n          setMemory(memory * parseFloat(value))\r\n        } else if (operator === '÷') {\r\n          setMemory(memory / parseFloat(value))\r\n        }\r\n      } else {\r\n        setMemory(parseFloat(value))\r\n      }\r\n      setValue('0')\r\n      setOperator('x')\r\n      return\r\n    }\r\n    if (content === '-') {\r\n      if (operator !== null) {\r\n        if (operator === '+') {\r\n          setMemory(memory + parseFloat(value))\r\n        } else if (operator === '-') {\r\n          setMemory(memory - parseFloat(value))\r\n        } else if (operator === 'x') {\r\n          setMemory(memory * parseFloat(value))\r\n        } else if (operator === '÷') {\r\n          setMemory(memory / parseFloat(value))\r\n        }\r\n      } else {\r\n        setMemory(parseFloat(value))\r\n      }\r\n      setValue('0')\r\n      setOperator('-')\r\n      return\r\n    }\r\n    if (content === '+') {\r\n      if (operator !== null) {\r\n        if (operator === '+') {\r\n          setMemory(memory + parseFloat(value))\r\n        } else if (operator === '-') {\r\n          setMemory(memory - parseFloat(value))\r\n        } else if (operator === 'x') {\r\n          setMemory(memory * parseFloat(value))\r\n        } else if (operator === '÷') {\r\n          setMemory(memory / parseFloat(value))\r\n        }\r\n      } else {\r\n        setMemory(parseFloat(value))\r\n      }\r\n      setValue('0')\r\n      setOperator('+')\r\n      return\r\n    }\r\n\r\n    if (content === '=') {\r\n      if (!operator) return\r\n\r\n      if (operator === '+') {\r\n        setValue((memory + parseFloat(value)).toString())\r\n      } else if (operator === '-') {\r\n        setValue((memory - parseFloat(value)).toString())\r\n      } else if (operator === 'x') {\r\n        setValue((memory * parseFloat(value)).toString())\r\n      } else if (operator === '÷') {\r\n        setValue((memory / parseFloat(value)).toString())\r\n      } else {\r\n        setValue(parseFloat(value))\r\n      }\r\n      setMemory(null)\r\n      setOperator(null)\r\n      return\r\n    }\r\n    if (value[value.length - 1] === '.') {\r\n      setValue(value + content)\r\n    } else {\r\n      setValue(parseFloat(num + content).toString())\r\n    }\r\n  }\r\n\r\n  const comma = (value) => {\r\n    let val = ''\r\n    let decimal = ''\r\n    let isNeg = false\r\n    if (value.includes('.')) {\r\n      val = value.substring(0, value.indexOf('.'))\r\n      decimal = value.substring(value.indexOf('.'))\r\n    } else {\r\n      val = value\r\n    }\r\n    if (parseFloat(value) < 0) {\r\n      isNeg = true\r\n      val = val.substring(1)\r\n    }\r\n    return isNeg ? '-' + parseFloat(val).toLocaleString() + decimal : parseFloat(val).toLocaleString() + decimal\r\n  }\r\n  return (\r\n    <div className='calculator'>\r\n      <div className='result'>\r\n        <div className='history'>\r\n          <p className='displayOverAll'>{memory}</p>\r\n        </div>\r\n        <div className='output'>\r\n          <p className='outputValue'>{comma(value)}</p>\r\n        </div>\r\n      </div>\r\n      <div className='buttons'>\r\n        <Button handleButton={handleButton} content='AC' />\r\n        <Button handleButton={handleButton} content='±' />\r\n        <Button handleButton={handleButton} content='%' />\r\n        <Button handleButton={handleButton} content='÷' />\r\n        <Button handleButton={handleButton} content='7' />\r\n        <Button handleButton={handleButton} content='8' />\r\n        <Button handleButton={handleButton} content='9' />\r\n        <Button handleButton={handleButton} content='x' />\r\n        <Button handleButton={handleButton} content='4' />\r\n        <Button handleButton={handleButton} content='5' />\r\n        <Button handleButton={handleButton} content='6' />\r\n        <Button handleButton={handleButton} content='-' />\r\n        <Button handleButton={handleButton} content='1' />\r\n        <Button handleButton={handleButton} content='2' />\r\n        <Button handleButton={handleButton} content='3' />\r\n        <Button handleButton={handleButton} content='+' />\r\n        <Button handleButton={handleButton} content='0' />\r\n        <Button handleButton={handleButton} content='.' />\r\n        <Button handleButton={handleButton} content='=' />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './Style/Style.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n","import React from 'react'\nimport Author from './Author/Author'\nimport Calculator from './Components/Calculator'\n\nexport default function App () {\n  return (\n    <div>\n      <Calculator />\n      <Author />\n    </div>\n  )\n}\n"],"sourceRoot":""}